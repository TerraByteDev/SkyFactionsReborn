/*
 * This file is generated by jOOQ.
 */
package net.skullian.skyfactions.common.database.jooq.tables.records


import net.skullian.skyfactions.common.database.jooq.tables.Players

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class PlayersRecord() : UpdatableRecordImpl<PlayersRecord>(Players.PLAYERS) {

    open var uuid: ByteArray?
        set(value): Unit = set(0, value)
        get(): ByteArray? = get(0) as ByteArray?

    open var faction: ByteArray?
        set(value): Unit = set(1, value)
        get(): ByteArray? = get(1) as ByteArray?

    open var lastRaid: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<ByteArray?> = super.key() as Record1<ByteArray?>

    /**
     * Create a detached, initialised PlayersRecord
     */
    constructor(uuid: ByteArray? = null, faction: ByteArray? = null, lastRaid: Long? = null): this() {
        this.uuid = uuid
        this.faction = faction
        this.lastRaid = lastRaid
        resetTouchedOnNotNull()
    }
}
