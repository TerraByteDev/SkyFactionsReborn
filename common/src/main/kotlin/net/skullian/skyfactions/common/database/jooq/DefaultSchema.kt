/*
 * This file is generated by jOOQ.
 */
package net.skullian.skyfactions.common.database.jooq


import kotlin.collections.List

import net.skullian.skyfactions.common.database.jooq.tables.FlywaySchemaHistory
import net.skullian.skyfactions.common.database.jooq.tables.Islands
import net.skullian.skyfactions.common.database.jooq.tables.Players

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.DSL
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class DefaultSchema : SchemaImpl(DSL.name(""), DefaultCatalog.DEFAULT_CATALOG, DSL.comment("")) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>islands</code>.
     */
    val ISLANDS: Islands get() = Islands.ISLANDS

    /**
     * The table <code>players</code>.
     */
    val PLAYERS: Players get() = Players.PLAYERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Islands.ISLANDS,
        Players.PLAYERS
    )
}
