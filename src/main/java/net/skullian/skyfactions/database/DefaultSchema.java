/*
 * This file is generated by jOOQ.
 */
package net.skullian.skyfactions.database;


import net.skullian.skyfactions.database.tables.*;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import java.util.Arrays;
import java.util.List;


@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>auditLogs</code>.
     */
    public final Auditlogs AUDITLOGS = Auditlogs.AUDITLOGS;

    /**
     * The table <code>defenceLocations</code>.
     */
    public final Defencelocations DEFENCELOCATIONS = Defencelocations.DEFENCELOCATIONS;

    /**
     * The table <code>factionBans</code>.
     */
    public final Factionbans FACTIONBANS = Factionbans.FACTIONBANS;

    /**
     * The table <code>factionInvites</code>.
     */
    public final Factioninvites FACTIONINVITES = Factioninvites.FACTIONINVITES;

    /**
     * The table <code>factionIslands</code>.
     */
    public final Factionislands FACTIONISLANDS = Factionislands.FACTIONISLANDS;

    /**
     * The table <code>factionMembers</code>.
     */
    public final Factionmembers FACTIONMEMBERS = Factionmembers.FACTIONMEMBERS;

    /**
     * The table <code>factions</code>.
     */
    public final Factions FACTIONS = Factions.FACTIONS;

    /**
     * The table <code>islands</code>.
     */
    public final Islands ISLANDS = Islands.ISLANDS;

    /**
     * The table <code>notifications</code>.
     */
    public final Notifications NOTIFICATIONS = Notifications.NOTIFICATIONS;

    /**
     * The table <code>playerData</code>.
     */
    public final Playerdata PLAYERDATA = Playerdata.PLAYERDATA;

    /**
     * The table <code>trustedPlayers</code>.
     */
    public final Trustedplayers TRUSTEDPLAYERS = Trustedplayers.TRUSTEDPLAYERS;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Auditlogs.AUDITLOGS,
            Defencelocations.DEFENCELOCATIONS,
            Factionbans.FACTIONBANS,
            Factioninvites.FACTIONINVITES,
            Factionislands.FACTIONISLANDS,
            Factionmembers.FACTIONMEMBERS,
            Factions.FACTIONS,
            Islands.ISLANDS,
            Notifications.NOTIFICATIONS,
            Playerdata.PLAYERDATA,
            Trustedplayers.TRUSTEDPLAYERS
        );
    }
}
